<?xml version="1.0" encoding="utf-8"?>

<otrs_stats>
<Cache>0</Cache>
<Description>Somma dei tempi sulle code della catena MVNE.</Description>
<File Encode="Base64" File="TimeOnQueueMVNE" Location="Kernel/System/Stats/Static/TimeOnQueueMVNE.pm" Permission="644"></File>
<Format>CSV</Format>
<Format>Print</Format>
<GraphSize></GraphSize>
<Object></Object>
<ObjectModule>Kernel::System::Stats::Static::TimeOnQueueMVNE</ObjectModule>
<Permission>MVNE-FrontEnd-GUI</Permission>
<Permission>MVNE-FrontEnd-SIEBEL</Permission>
<StatType>static</StatType>
<SumCol>0</SumCol>
<SumRow>0</SumRow>
<Title>Ticket con Tempi di Permanenza per coda (MVNE) (2012-06-07) - ver 2</Title>
<Valid>1</Valid>
</otrs_stats>
